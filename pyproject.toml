[tool.poetry]
name = "Data QA"
version = "0.0.1"
description = "Descartes & Mauss Data QA"
readme = "README.md"
authors = ["Tom Murdoch <tom.murdoch@descartesmauss.ai>"]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
requests = "^2.31.0"
pandas = "^2.1.2"
openpyxl = "^3.1.2"
smart-open = {extras = ["gcs"], version = "^6.4.0"}
deltalake = "^0.11.0"
google-cloud-secret-manager = "^2.16.4"
google-cloud-storage = "^2.13.0"
google-cloud-logging = "^3.8.0"
pandera = "^0.17.2"
whylogs = {extras = ["spark", "viz"], version = "^1.3.13"}
pyspark = "^3.5.0"
delta-spark = "^3.0.0"
streamlit = "^1.33.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
bandit = "^1.7.5"
pytest = "^7.4.3"
black = "^23.11.0"
pytest-ordering = "^0.6"
pytest-cov = "^4.1.0"
mypy = "^1.6.1"
mdformat = "^0.7.16"
validate-pyproject = "^0.13"
faker = "^19.13.0"
plantuml = "^0.3.0"
ruff = "^0.1.5"
sphinx = "^7.2.6"

[tool.poetry.group.kd.dependencies]
kedro = "^0.18.14"
kedro-viz = "^6.6.1"

[tool.poetry.group.jnb]
optional = true

[tool.poetry.group.jnb.dependencies]
ipykernel = "^6.26.0"
ipywidgets = "^8.1.1"
ipython = "^8.17.2"
contourpy = "^1.2.0"
cycler = "^0.12.0"
fonttools = "^4.44.0"
kiwisolver = "^1.4.5"
matplotlib = "^3.8.1"
numpy = "^1.26.1"
packaging = "^23.2"
pyparsing = "^3.1.1"
python-dateutil = "^2.8.2"
pytz = "^2023.3.post1"
scipy = "^1.11.3"
seaborn = "^0.13.0"
six = "^1.16.0"
nbstripout = "^0.6.1"

[tool.poetry.group.ds]
optional = true

[tool.poetry.group.ds.dependencies]
torch = "^2.1.0"
transformers = "^4.35.0"
nltk = "^3.8.1"
gensim = "^4.3.2"
scikit-learn = "^1.3.2"
bigtree = "^0.10.3"
flashtext = "^2.7"
langdetect = "^1.0.9"
top2vec = "^1.0.33"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:",
]
testpaths = [
  "test"
]

## coverage

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_empty = true
fail_under = 100
precision = 2
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

## black

[tool.black]
target-version = ['py310']
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | venv
  | \.venv
  | _build
  | build
  | dist
  | \.devcontainer
)/
'''

## ruff

[tool.ruff]
line-length = 99
target-version = "py310"
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore = ["E203","E501"] # Black takes care of line-too-long
exclude = [".devcontainer"]

## mypy

[tool.mypy]
python_version = "3.10"
mypy_path = ["components", "bases"]
namespace_packages = "True"
explicit_package_bases = "True"

[tool.mypy-functions_framework]
ignore_missing_imports = "True"

## bandit

[tool.bandit]
exclude_dirs = ["test"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]
